package main

import (
	"encoding/json"
	"flag"
	"fmt"
	"io"
	"os"

	"github.com/xsean2020/json2go"
)

func main() {
	// 命令行标志，指定根结构体的名称、是否使用匿名结构体、输出文件名、包名
	rootName := flag.String("struct-name", "RootStruct", "Specify the root struct name for the Go code generation")
	useAnonymous := flag.Bool("anonymous", false, "Use anonymous structs (default: false)")
	outputFile := flag.String("output", "", "Output file name (default: stdout)")
	packageName := flag.String("pkg", "main", "Package name for the generated Go file")

	flag.Parse()

	// 从标准输入读取 JSON 数据
	data, err := io.ReadAll(os.Stdin)
	if err != nil {
		panic(err)
	}

	// 解析 JSON 数据
	var obj any
	if err := json.Unmarshal(data, &obj); err != nil {
		panic(err)
	}

	// 使用根结构体名称生成 Go 结构体
	root := json2go.DetectType(obj, *rootName, "")
	content := fmt.Sprintf(`// Code generated by json2go; DO NOT EDIT.
// Generated by github.com/xsean2020/json2go

package %s

%s
`, *packageName, root.GenGoStructs(*useAnonymous))

	// 输出到文件或 stdout
	if *outputFile == "" {
		fmt.Println(content)
	} else {
		err := os.WriteFile(*outputFile, []byte(content), 0644)
		if err != nil {
			panic(err)
		}
	}
}
